on:
  workflow_call:
    inputs:
      nuxt-build-path:
        type: string
        default: ""
        description: Path to the nuxt source to build
      functions-path:
        type: string
        default: functions
        description: Path to the functions to deploy
      workload-identity-provider:
        type: string
        required: true
        description: ID of the workload identity provider
      service-account:
        type: string
        required: true
        description: Service account to use when deploying
      workload-identity-audience:
        type: string
        required: true
        description: Audience of the workload identity
    secrets:
      fcm-vapid-key:
        required: false
        description: (if used) VAPID Key for Firebase Cloud Messaging

jobs:
  changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      hosting: ${{ steps.changed-files.outputs.only_changed == 'false' }}
      functions: ${{ steps.changed-files.outputs.any_changed == 'true' }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            ${{ inputs.functions-path }}/**

  nuxt-build:
    name: Nuxt Build
    needs:
      - changed-files
    if: ${{ needs.changed-files.outputs.hosting }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: yarn install
        run: yarn install --frozen-lockfile
        working-directory: ${{ inputs.nuxt-build-path }}

      - name: Build
        run: yarn generate
        working-directory: ${{ inputs.nuxt-build-path }}
        env:
          NODE_OPTIONS: "--max_old_space_size=5120"
          FCM_VAPID_KEY: ${{ secrets.fcm-vapid-key }}

      - name: Zip artifact
        working-directory: ${{ inputs.nuxt-build-path }}
        run: zip -qq -r ~/artifact.zip dist/

      - uses: actions/upload-artifact@v3
        with:
          name: nuxt-generated
          path: |
            ~/artifact.zip

  deploy-hosting:
    name: Deploy to Hosting
    needs:
      - changed-files
      - nuxt-build
    if: ${{ needs.changed-files.outputs.hosting }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - uses: actions/download-artifact@v3
        with:
          name: nuxt-generated

      - name: Unzip artifact
        run: unzip artifact.zip

      - name: Install Firebase CLI
        run: yarn global add firebase-tools

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ inputs.workload-identity-provider }}
          service_account: ${{ inputs.service-account }}
          audience: ${{ inputs.workload-identity-audience }}

      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: nuxt-generated

  deploy-to-functions:
    name: "Deploy to Functions"
    runs-on: ubuntu-latest
    needs:
      - changed-files
    if: ${{ needs.changed-files.outputs.functions == 'true' }}
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: "**/yarn.lock"

      - name: yarn install
        run: |
          yarn install --frozen-lockfile
          cd functions && yarn install --frozen-lockfile

      - name: Install Firebase CLI
        run: yarn global add firebase-tools

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ inputs.workload-identity-provider }}
          service_account: ${{ inputs.service-account }}
          audience: ${{ inputs.workload-identity-audience }}

      - name: Deploy to Cloud Functions
        run: firebase deploy --only functions

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true